import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import nodemailer from 'nodemailer';

// ENV config
dotenv.config();

const app = express();
app.use(cors());
app.use(express.json());

// OTP generator function
function generateOTP() {
  return Math.floor(1000 + Math.random() * 9000).toString(); // рзк рж╕ржВржЦрзНржпрж╛рж░ OTP
}

// POST: /api/send-otp
app.post('/api/send-otp', async (req, res) => {
  const { contact } = req.body;

  if (!contact || !/\S+@\S+\.\S+/.test(contact)) {
    return res.status(400).json({ success: false, message: 'рж╕ржарж┐ржХ ржЗржорзЗржЗрж▓ ржкрзНрж░ржжрж╛ржи ржХрж░рзБржиред' });
  }

  const otp = generateOTP();

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: contact,
    subject: 'ржЖржкржирж╛рж░ OTP ржХрзЛржб',
    html: `<h3>ржЖржкржирж╛рж░ OTP ржХрзЛржб: <span style="color:blue">${otp}</span></h3>`,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log(`тЬЕ OTP ${otp} ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ ${contact} ржарж┐ржХрж╛ржирж╛рзЯ`);
    res.json({ success: true, message: 'OTP ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ' });
  } catch (error) {
    console.error('тЭМ ржЗржорзЗржЗрж▓ ржкрж╛ржарж╛рждрзЗ ржмрзНржпрж░рзНрже:', error);
    res.status(500).json({ success: false, message: 'ржЗржорзЗржЗрж▓ ржкрж╛ржарж╛рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред' });
  }
});

// Server start
const PORT = process.env.PORT || 5000;

app.listen(PORT, () => {
  console.log(`ЁЯЪА Server is running on port ${PORT}`);
});
